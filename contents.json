[{"parts":[{"text":"Voc\u00ea \u00e9 um especialista em Git e GitHub. Explique de forma breve como realizar a tarefa solicitada. Ao final, forne\u00e7a o comando Git apropriado que eu devo usar"}],"role":"user"},{"parts":[{"text":"quais os nomes comuns para branch e sua aplica\u00e7\u00e3o"}],"role":"user"},{"parts":[{"text":"Aqui est\u00e3o alguns nomes comuns para branches e suas aplica\u00e7\u00f5es:\n\n**Branches de Desenvolvimento (Development Branches):**\n\n* **`develop`**: A branch principal para o desenvolvimento ativo. \u00c9 onde as novas features s\u00e3o adicionadas e os bugs s\u00e3o corrigidos.\n* **`feature\/`**: Criada para desenvolver uma nova feature espec\u00edfica. Nomeie a branch com um nome descritivo, como `feature\/new-payment-system`.\n* **`bugfix\/`**: Criada para corrigir um bug espec\u00edfico. Nomeie a branch com um nome descritivo, como `bugfix\/broken-login-form`.\n* **`hotfix\/`**: Criada para corrigir um bug urgente em produ\u00e7\u00e3o. \u00c9 importante nomear a branch com o nome do bug ou da vers\u00e3o da aplica\u00e7\u00e3o afetada.\n\n**Branches de Release (Release Branches):**\n\n* **`release\/`**: Criada para preparar uma nova vers\u00e3o para produ\u00e7\u00e3o. \u00c9 onde os testes finais s\u00e3o realizados e as corre\u00e7\u00f5es s\u00e3o aplicadas.\n* **`release-v1.2.3`**: Uma branch espec\u00edfica para uma vers\u00e3o, como a vers\u00e3o 1.2.3 da aplica\u00e7\u00e3o.\n\n**Outras Branches:**\n\n* **`master`**: Tradicionalmente, a branch principal que cont\u00e9m o c\u00f3digo de produ\u00e7\u00e3o. Embora ainda seja usada em alguns projetos, a recomenda\u00e7\u00e3o atual \u00e9 usar `main` como branch principal.\n* **`main`**: A branch principal que cont\u00e9m o c\u00f3digo de produ\u00e7\u00e3o. \u00c9 a melhor pr\u00e1tica usar `main` em vez de `master`.\n* **`experimental\/`**: Criada para testar ideias ou novas tecnologias que n\u00e3o est\u00e3o prontas para o desenvolvimento principal.\n* **`documentation\/`**: Criada para trabalhar em atualiza\u00e7\u00f5es de documenta\u00e7\u00e3o.\n\n**Exemplos de Nomes de Branches:**\n\n* `feature\/add-user-profile-page`\n* `bugfix\/fix-login-error-message`\n* `release\/v1.2.0`\n* `experimental\/new-authentication-system`\n* `documentation\/update-api-documentation`\n\n**Recomenda\u00e7\u00f5es:**\n\n* **Nomeie as branches de forma descritiva:** Isso facilita a compreens\u00e3o do prop\u00f3sito da branch.\n* **Use um padr\u00e3o consistente de nomenclatura:** Isso torna o hist\u00f3rico do Git mais f\u00e1cil de entender.\n* **Crie branches com frequ\u00eancia:** Isso permite que voc\u00ea trabalhe em novos recursos sem afetar o c\u00f3digo principal.\n* **Fa\u00e7a merge das branches em `main` assim que estiverem prontas:** Isso mant\u00e9m o `main` atualizado e pronto para produ\u00e7\u00e3o.\n\n**Comando Git para criar uma branch:**\n\n```bash\ngit checkout -b <nome-da-branch>\n```\n\nExemplo:\n\n```bash\ngit checkout -b feature\/add-user-profile-page\n```\n\nLembre-se de substituir `<nome-da-branch>` pelo nome da branch que voc\u00ea deseja criar.\n"}],"role":"model"}]